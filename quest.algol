ALGORITHMICALLY GENERATED ADVENTURE GAME'

BEGIN
  COMMENT GAME STATE IS STORED IN GLOBAL VARIABLES. COULD PERHAPS MOVE TO OWN VARIABLES IN A PROCEDURE'

  COMMENT VARIABLES THAT DESCRIBE THE WORLD THAT THE PLAYER IS IN'
  COMMENT ---------'

  COMMENT WORLD NUMBER, USED AS SEED TO GENERATE WORLD'
  INTEGER WORLD'

  COMMENT THE WORLD IS A 5X5 GRID OF SQUARES. EACH HAS A LANDSCAPE TYPE INDEX, THE INDEX OF ANY OBJECT PRESENT (ZERO IF NOT) AND THE OBJECT STRENGTH. ALSO THE INDEX OF ANY MONSTER PRESENT (ZERO IF NOT) AND ITS STRENGTH'
  INTEGER ARRAY LANDSCAPE(0:24)'
  INTEGER ARRAY OBJECT(0:24)'
  INTEGER ARRAY OBSTRENGTH(0:24)'
  INTEGER ARRAY MONSTER(0:24)'
  INTEGER ARRAY MONSTRENGTH(0:24)'

  COMMENT THE FOLLOWING BOOLEANS ARE SET TO DESCRIBE WHETHER THE PLAYER CAN EXIT IN THIS DIRECTION FROM THE CURRENT LOCATION'
  BOOLEAN NORTH, SOUTH, WEST, EAST'

  COMMENT VARIABLES THAT DESCRIBE THE PLAYER STATE'
  COMMENT ---------'

  COMMENT LEVEL NUMBER OF THE PLAYER. AS LEVEL INCREASES, THE MONSTERS GET TOUGHER'
  INTEGER LEVEL'

  COMMENT THE CURRENT AND PREVIOUSLPOSITION OF THE PLAYER IN THE WORLD GRID'
  COMMENT PREVIOUS POSITION USED WHEN RETREATING FROM A FIGHT'
  INTEGER POS'
  INTEGER LASTPOS'

  COMMENT STRENGTH AND SKILL LEVEL OF THE PLAYER 0-100'
  INTEGER STRENGTH'
  INTEGER SKILL'

  COMMENT INDEX OF THE OBJECT THAT THE PLAYER IS CARRYING, AND ITS STRENGTH'
  COMMENT ZERO INDICATES CARRYING NOTHING'
  INTEGER CARRYING'
  INTEGER CARRYSTRENGTH'

  COMMENT RANDOM NUMBER GENERATOR. GENERATES AN INTEGER BETWEEN 0 AND RANGE (INCLUSIVE). CURRENT SEED STORED IN RANDVAR'
  INTEGER RANDVAR'
  INTEGER PROCEDURE RANDOM(RANGE)'
  VALUE RANGE' INTEGER RANGE'
  BEGIN
    INTEGER R'
    INTEGER MASK'
    RANGE := RANGE + 1'

    COMMENT MULTIPLY AND ADD, THEN MASK THE BOTTOM 31 BITS'
    RANDVAR := RANDVAR * 214013 + 2531011'
    MASK := 65535' COMMENT 2 TO THE POWER 16 MINUS 1'
    ELLIOTT(3, 0, RANDVAR, 0, 0, 3, MASK)' COMMENT ACC := RANDVAR, ACC AND= MASK'
    ELLIOTT(2, 0, RANDVAR, 0, 0, 0, 0)' COMMENT RANDVAR := ACC, NOP'
    R := RANDVAR - (RANDVAR DIV RANGE) * RANGE'
    RANDOM := R'
  END RANDOM'

  COMMENT HELPER PROCEDURE FOR MAKING A TRUE/FALSE DECISION BASED ON A PROBABILITY. PROBABILITY IS EXPRESSED AS AN INTEGER PERCENTAGE 0 TO 100'
  BOOLEAN PROCEDURE DECIDE(BELOW)'
  VALUE BELOW' INTEGER BELOW'
  BEGIN
    INTEGER I, NUM, J'
    NUM := RANDOM(50) + 20'
    FOR I := 0 STEP 1 UNTIL NUM DO J := RANDOM(100)'
    DECIDE := RANDOM(100) LESS BELOW'
  END DECIDE'

  COMMENT PRINTS A PSEUDO-RANDOM NAME BASED ON THE PROVIDED SEED'
  PROCEDURE NAME(SEED)'
  VALUE SEED' INTEGER SEED'
  BEGIN
    INTEGER LEN, TEMP, I, J'
    TEMP := RANDVAR'
    RANDVAR := SEED'
    LEN := RANDOM(3) + 1'
    FOR I := 1 STEP 1 UNTIL LEN + 1 DO BEGIN
      J := RANDOM(8)'
      IF J = 0 THEN PRINT £ ZERO?'
      IF J = 1 THEN PRINT £ ALPHA?'
      IF J = 2 THEN PRINT £ BETA?'
      IF J = 3 THEN PRINT £ PROXIMA?'
      IF J = 4 THEN PRINT £ MAXIMA?'
      IF J = 5 THEN PRINT £ CAECILIUS?'
      IF J = 6 THEN PRINT £ GAMMA?'
      IF J = 7 THEN PRINT £ GRUMIO?'
    END FOR'
    RANDVAR := TEMP'
  END NAME'

  COMMENT INITIALISES THE WORLD WITH LANDSCAPE, OBJECTS AND MONSTERS. THE RANDOM SEED NEEDS TO HAVE BEEN INITIALISED IN ADVANCE WITH THE WORLD NUMBER'
  PROCEDURE PREPARE'
  BEGIN
    INTEGER X, Y, P'
    FOR X := 0 STEP 1 UNTIL 4 DO BEGIN
      FOR Y := 0 STEP 1 UNTIL 4 DO BEGIN
        P := X + Y * 5'
        LANDSCAPE(P) := RANDOM(4) + 1'
        OBJECT(P) := RANDOM(4)'
        OBSTRENGTH(P) := RANDOM((LEVEL + 1) * 10) + 1'
        MONSTER(P) := RANDOM(4)'
        MONSTRENGTH(P) := RANDOM((LEVEL + 1) * 10 + 1)'
      END'
    END'
    POS := 3 + 2 * 5'
    LASTPOS := POS'
    MONSTER(POS) := 0'
  END PREPARE'

  COMMENT PRINTS THE NAME OF AN OBJECT WHOSE INDEX IS NUM AND STRENGTH IS STRN. IF FULL IS TRUE PRINTS A LONG DESCRIPTION, OTHERWISE PRINTS A SHORT DESCRIPTION WITH NO STRENGTH'
  COMMENT TODO- LOAD OBJECT NAMES FROM TAPE SO THEY VARY BETWEEN WORLDS'
  PROCEDURE PRINTOBJ(NUM, STRN, FULL)'
  VALUE NUM, STRN, FULL' INTEGER NUM, STRN' BOOLEAN FULL'
  BEGIN
    SWITCH OB := NOTHING,SWORD,WAND,STONE,GOLD'
    SWITCH SS := DONE'
    GOTO OB(NUM+1)'
  NOTHING: PRINT £NOTHING?' GOTO DONE'
  SWORD: PRINT £A SWORD?'
    IF FULL THEN PRINT £ OF STRENGTH ?, STRN'
    GOTO DONE'
  WAND: PRINT £A MAGIC WAND?'
    IF FULL THEN PRINT £ OF MAGIC ?, STRN'
    GOTO DONE'
  STONE: PRINT £A STONE?'
    IF FULL THEN PRINT £ OF WEIGHT ?, STRN, £KG?'
    GOTO DONE'
  GOLD: PRINT £SOME GOLD?'
    IF FULL THEN PRINT £ OF VALUE ?, STRN, £ COINS?'
    GOTO DONE'
  DONE:
    PRINT £?'
  END PRINTOBJ'


  COMMENT PRINTS THE NAME OF THE MONSTER WHOSE INDEX IS NUM'
  PROCEDURE PRINTMON(NUM)'
  VALUE NUM' INTEGER NUM'
  BEGIN
    SWITCH OB := NOTHING,SPIDER,TROLL,GOBLIN,GHOST'
    SWITCH SS := DONE'
    GOTO OB(NUM+1)'
  NOTHING: PRINT £NO MONSTER?' GOTO DONE'
  SPIDER: PRINT £A HUGE SPIDER?' GOTO DONE'
  TROLL: PRINT £A VICIOUS TROLL?' GOTO DONE'
  GOBLIN: PRINT £A NASTY GOBLIN?' GOTO DONE'
  GHOST: PRINT £AN ANGRY GHOST?' GOTO DONE'
  DONE:
    PRINT £?'
  END PRINTMON'

  COMMENT MAKE THE MONSTER IN THE CURRENT LOCATION ATTACK THE PLAYER'
  PROCEDURE MONATTACK'
  BEGIN
    INTEGER DAMAGE'
    SWITCH SS := FINISHED'

    IF MONSTER(POS) = 0 THEN GOTO FINISHED'
    PRINTMON(MONSTER(POS))'
    PRINT £ ATTACKS YOU ?'
    DAMAGE := RANDOM(MONSTRENGTH(POS)) DIV 2'
    IF DAMAGE LESSEQ MONSTRENGTH(POS) DIV 6 THEN
      PRINT £CAUSING NO DAMAGE. ?
    ELSE BEGIN
      PRINT £CAUSING ?, DAMAGE, £ DAMAGE. ?'
      STRENGTH := STRENGTH - DAMAGE'
    END DAMAGE'

    COMMENT RANDOM OCCURRENCES'
    DAMAGE := RANDOM(10)'
    IF DAMAGE = 1 AND CARRYING NOTEQ 0 AND OBJECT(POS) = 0 THEN BEGIN
      PRINT £YOU DROP ?' PRINTOBJ(CARRYING,0,FALSE)' PRINT £. ?'
      OBJECT(POS) := CARRYING'
      CARRYING := 0'
      GOTO FINISHED'
    END DAMAGE1'

    IF DAMAGE = 1 AND CARRYING NOTEQ 0 THEN BEGIN
      PRINT £THE ?' PRINTOBJ(CARRYING,0,FALSE)' PRINT £ BREAKS. ?'
      CARRYING := 0'
      GOTO FINISHED'
    END DAMAGE1'

  FINISHED:
  END MONATTACK'

  COMMENT PRINT THE DESCRIPTION OF THE CURRENT LOCATION'
  COMMENT TODO- LOAD DESCRIPTIONS FROM TAPE TO ALLOW THEM TO VARY BETWEEN WORLDS'
  PROCEDURE LOOK'
  BEGIN
    INTEGER HERE'
    SWITCH SCAPE := TREES,CLEARING,POOL,HILLSIDE,HUT'
    SWITCH SS := DONE'

    HERE := LANDSCAPE(POS)'
    PRINT £YOU ARE ?'
    GOTO SCAPE(HERE)'
  TREES: PRINT £IN DENSE FOREST?' GOTO DONE'
  CLEARING: PRINT £IN A CLEARING IN THE TREES?' GOTO DONE'
  POOL: PRINT £BESIDE A POOL?' GOTO DONE'
  HILLSIDE: PRINT £ON A WOODED HILLSIDE?' GOTO DONE'
  HUT: PRINT £BESIDE A WOODLAND HUT?' GOTO DONE'
  DONE:
    PRINT £. ?'
    IF (OBJECT(POS) + MONSTER(POS) NOTEQ 0) THEN BEGIN
      PRINT £THERE IS ?'
      IF (MONSTER(POS) NOTEQ 0) THEN BEGIN
        PRINTMON(MONSTER(POS))'
        PRINT £ OF STRENGTH ?,MONSTRENGTH(POS)'
      END MONSTER'
      IF (OBJECT(POS) NOTEQ 0) THEN BEGIN
        IF (MONSTER(POS) NOTEQ 0) THEN PRINT £ GUARDING ?'
        PRINTOBJ(OBJECT(POS),OBSTRENGTH(POS),TRUE)'
      END OBJECT'
      PRINT £ HERE. ?'
    END'
  END LOOK'

  COMMENT CAUSE THE PLAYER TO ATTACK THE MONSTER IN THE CURRENT LOCATION'
  PROCEDURE YOUATTACK'
  BEGIN
    INTEGER DAMAGE'
    SWITCH SS := FINISHED'

    IF MONSTER(POS) = 0 THEN GOTO FINISHED'

    PRINT £YOU ATTACK ?' PRINTMON(MONSTER(POS))'
    IF CARRYSTRENGTH NOTEQ 0 THEN BEGIN
      PRINT £ WITH ?'
      PRINTOBJ(CARRYING,CARRYSTRENGTH,TRUE)'
      PRINT £ ?'
    END'

    DAMAGE := RANDOM(STRENGTH) DIV 2 + CARRYSTRENGTH'
    IF DAMAGE LESSEQ MONSTRENGTH(POS) THEN
      PRINT £CAUSING NO DAMAGE. ?
    ELSE BEGIN
      PRINT £CAUSING ?, DAMAGE, £ DAMAGE. ?'
      MONSTRENGTH(POS) := MONSTRENGTH(POS) - DAMAGE'
    END DAMAGE'

    IF MONSTRENGTH(POS) LESS 1 THEN BEGIN
      PRINT PRINTMON(MONSTER(POS)), £ DIES. ?'
      MONSTER(POS) := 0'
      LOOK'
    END MONSTRENGTH'

  FINISHED:
  END YOUATTACK'

  COMMENT PRINT A STATUS SUMMARY FOR THE PLAYER'
  PROCEDURE STATUS'
  BEGIN
    BOOLEAN FOUND'
    FOUND := FALSE'
    PRINT £LEVEL ?,SPECIAL(1),LEVEL,SAMELINE,£ ADVENTURER ON PLANET?' NAME(WORLD)' PRINT £.£L??'
    PRINT £YOUR STRENGTH IS ?,STRENGTH, £, AND YOUR SKILL IS ?,SKILL,£. ?'
    PRINT £YOU ARE CARRYING ?,PRINTOBJ(CARRYING,CARRYSTRENGTH,TRUE),£.£L2??'
  END STATUS'

  COMMENT NON-BLOCKING FUNCTION TO GET THE CURRENT INPUT STATE OF THE INPUT BOARD'
  COMMENT IF THE TOP BIT IS PRESSED, IT INSTEAD GETS A VALUE FROM THE PUNCH'
  COMMENT TAPE'
  INTEGER PROCEDURE GETIN'
  BEGIN
    INTEGER RESULT'
    INTEGER MASK'
    INTEGER CHOICE'

    RESULT := 0'

    MASK := 1023'
    ELLIOTT(7, 0, 0, 0, 0, 3, MASK)'
    ELLIOTT(2, 0, RESULT, 0, 0, 0, 0)'

    IF RESULT = 512 THEN BEGIN
      COMMENT TOP BUTTON PRESSED, SO USE TAPE READER, I.E. KEYBOARD'
      ELLIOTT(0, 6, 0, 0, 7, 1, 0)'
      ELLIOTT(2, 0, CHOICE, 0, 0, 0, 0)'

      COMMENT CONVERT KEYBOARD DIGIT TO EQUIVALENT TO INPUT BOARD'
      IF CHOICE = 14 OR CHOICE = 6 THEN RESULT := 1'
      IF CHOICE = 19 THEN RESULT := 2'
      IF CHOICE = 23 THEN RESULT := 4'
      IF CHOICE = 5 THEN RESULT := 8'

      IF CHOICE = 20 THEN RESULT := 16'
      IF CHOICE = 26 THEN RESULT := 64'
      IF CHOICE = 1 THEN RESULT := 32'
      IF CHOICE = 17 THEN RESULT := 128'
    END IF'

    GETIN := RESULT'
  END GETIN'

  COMMENT PRINT A CONTEXT-SENSITIVE LIST OF OPTIONS TO TO THE PLAYER BASED ON THE CURRENT GAME STATE'
  PROCEDURE OPTIONS'
  BEGIN
    SWITCH SS := FINISHED'

    PRINT ££L?WHAT NEXT£U? ?'
    NORTH := POS GR 4'
    SOUTH := POS LESS 20'
    WEST := POS - (POS DIV 5) * 5 GR 0'
    EAST := POS - (POS DIV 5) * 5 LESS 4'

    COMMENT IF THERE IS A MONSTER ONLY GIVE A FLEE OPTION AND DONT EVEN GIVE THAT IF THIS IS THE FIRST MOVE'
    IF MONSTER(POS) NOTEQ 0 THEN BEGIN
      IF LASTPOS NOTEQ POS THEN PRINT £1 (F)LEE, ?'
      IF OBJECT(POS) NOTEQ 0 THEN PRINT £16 S(T)EAL, ?'
      PRINT £32 (A)TTACK, ?'
      GOTO FINISHED'
    END MONSTER'

    COMMENT NO MONSTER'
    IF NORTH THEN PRINT £1 (N)ORTH, ?'
    IF SOUTH THEN PRINT £2 (S)OUTH, ?'
    IF WEST THEN PRINT £4 (W)EST, ?'
    IF EAST THEN PRINT £8 (E)AST, ?'
    IF OBJECT(POS) NOTEQ 0 THEN PRINT £16 (T)AKE, ?'

  FINISHED:
    PRINT £64 (Z)STATUS, 128 (Q)UIT£L??'
  END OPTIONS'

  COMMENT BLOCKING FUNCTION TO GET THE NEXT INSTRUCTION FROM THE PLAYER. IF THE INPUT BUTTONS NEED RESETING IT WILL PROMPT THE PLAYER TO DO THIS BEFORE ACCEPTING INPUT'
  INTEGER PROCEDURE COMMAND'
  BEGIN
    INTEGER RESULT'

    SWITCH SS := LOOP'
    OPTIONS'

    RESULT:= 0'

  LOOP:
    RESULT := GETIN'
    IF RESULT = 0 THEN GOTO LOOP'

    COMMAND := RESULT'
  END COMMAND'

  COMMENT TAKE THE OBJECT IN THE CURRENT LOCATION'
  PROCEDURE TAKE'
  BEGIN
    INTEGER TEMP, TEMP1'

    TEMP := 0'
    TEMP1 := 0'
    IF OBJECT(POS) NOTEQ 0 THEN BEGIN
      TEMP := OBJECT(POS)'
      TEMP1 := OBSTRENGTH(POS)'
      PRINT £YOU TAKE ?, PRINTOBJ(OBJECT(POS),0,FALSE), £. ?'
    END OBJECT'

    OBJECT(POS) := CARRYING'
    OBSTRENGTH(POS) := CARRYSTRENGTH'
    CARRYING := TEMP'
    CARRYSTRENGTH := TEMP1'

    IF OBJECT(POS) NOTEQ 0 THEN PRINT £YOU DROP ?, PRINTOBJ(OBJECT(POS),0,FALSE), £.?'
  END TAKE'

  COMMENT ACT ON THE COMMAND PROVIDED BY THE USER AND PRINT THE RESULTS. RETURNS ZERO IF THE PLAYER IS STILL ALIVE AFTER THE COMMAND COMPLETES'
  INTEGER PROCEDURE GAME(CMD)'
  VALUE CMD' INTEGER CMD'
  BEGIN
    INTEGER RESULT'
    SWITCH SS := FINISHED, DONEMON'

    RESULT := 0'
    IF MONSTER(POS) NOTEQ 0 THEN BEGIN
      IF CMD = 1 AND LASTPOS NOTEQ POS THEN BEGIN
        INTEGER TEMP'

        PRINT £YOU ATTEMPT TO FLEE. ?'
        IF DECIDE(66) THEN PRINT £YOU ARE SUCCESSFUL. ? ELSE MONATTACK'
        TEMP := POS' POS := LASTPOS' LASTPOS := TEMP'
        LOOK'
        GOTO FINISHED'
      END CMD'

      IF CMD = 16 THEN BEGIN
        COMMENT STEAL'
        PRINT £YOU ATTEMPT TO STEAL ?' PRINTOBJ(OBJECT(POS),0,FALSE)' PRINT £. ?'
        IF DECIDE(33) THEN TAKE ELSE PRINT £YOU ARE UNSUCCESSFUL. ?'
      END CMD'

      IF CMD = 32 THEN BEGIN
        COMMENT ATTACK'
        YOUATTACK'
      END CMD'
      GOTO DONEMON'
    END MONSTER'

    COMMENT NO MONSTER'
    IF CMD = 1 AND NORTH THEN BEGIN LASTPOS := POS' POS := POS - 5' PRINT £YOU GO NORTH. ?' LOOK' GOTO FINISHED' END'
    IF CMD = 2 AND SOUTH THEN BEGIN LASTPOS := POS' POS := POS + 5' PRINT £YOU GO SOUTH. ?' LOOK' GOTO FINISHED' END'
    IF CMD = 4 AND WEST THEN BEGIN LASTPOS := POS' POS := POS - 1' PRINT £YOU GO WEST. ?' LOOK' GOTO FINISHED' END'
    IF CMD = 8 AND EAST THEN BEGIN LASTPOS := POS' POS := POS + 1' PRINT £YOU GO EAST. ?' LOOK' GOTO FINISHED' END'
    IF CMD = 16 THEN BEGIN TAKE' GOTO FINISHED' END'

  DONEMON:
    IF CMD = 64 THEN BEGIN STATUS' GOTO FINISHED' END'
    IF CMD = 128 THEN RESULT := 1'

  FINISHED:
    PRINT ££L??'
    GAME := RESULT'
  END GAME'

  COMMENT MAIN GAME LOOP. FIRST INITIALISE THE GAME STATE'
  RANDVAR := 125'
  SKILL := 0'
  STRENGTH := 50'
  WORLD := 0'
  LEVEL := 0'
  LASTPOS := 0'

  BEGIN
    INTEGER CHOICE'
    SWITCH SS := LOOP'
    PUNCH(3)'
    SAMELINE' SPECIAL(1)' LEADZERO(£?)'
    CARRYING := 0' CARRYSTRENGTH := 0'

    PRINT £USE ADDRESS 2 TO CONTROL, OR SET BIT 512 AND FEED KEY INPUT ?'
    PRINT £INTO TAPE A.£L??'
    PRINT £TELEPORTING... £L??'
    PREPARE'
    PRINT £YOU MATERIALISE ON PLANET?' NAME(WORLD)' PRINT £.£L??'
    STATUS'
    LOOK'
  LOOP:
    MONATTACK'
    IF STRENGTH LESS 1 THEN BEGIN
      PRINT £OUT OF STRENGTH, YOU COLLAPSE AND DIE.?'
    END ELSE
      IF GAME(COMMAND) = 0 THEN GOTO LOOP'
    PRINT £GAME OVER£L2??'
  END'
END PROGRAM'
